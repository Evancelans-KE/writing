--TABLE PERSONS

CREATE TABLE PERSONS 
(
PERSON_ID VARCHAR(255) NOT NULL,
PERSON_NAME VARCHAR(255),
NATIONALITY VARCHAR,
PRIMARY KEY(PERSON_ID)
);

--DETECTIVE TABLES 

CREATE TABLE DETECTIVES
(
DETECTIVE_ID INT NOT NULL,
DETECTIVE_NAME VARCHAR(255),
DETECTIVE_LOCATION VARCHAR(255),
IS_ACTIVE VARCHAR(255),
PRIMARY KEY (DETECTIVE_ID)
)


--CRIME TABLES

CREATE TABLE CRIMES 
(CRIME_ID INT NOT NULL,
CRIME_LOCATION VARCHAR(255),
CRIME_TIMESTAMP DATETIME,
CRIME_STATUS VARCHAR(255),
PRIMARY KEY (CRIME_ID)
)

--FACEBOOK POSTS  ID 
CREATE TABLE  FACEBOOK_POSTS
(
POST_ID INT NOT NULL,
POSTED_BY VARCHAR(255),
POST_TIMESTAMP TIMESTAMP,
POST_LOCATION VARCHAR(255),
POST_STATUS VARCHAR(255),
PRIMARY KEY (POST_ID)
)

--CREATE ITEMS 

CREATE TABLE ITEMS 
(
ITEM_ID INT NOT NULL,
ITEM_NAME VARCHAR(255),
ITEM_TYPE VARCHAR(255),
IS_RELATIONAL VARCHAR(25),
PRIMARY KEY(ITEM_ID)
)

--BOOKING TABLE 

CREATE TABLE BOOKINGS 
(
BOOKING_ID INT NOT NULL,
BOOKING_NAME VARCHAR(255),
TICKET_ID VARCHAR(255),
BOOKING_DATE DATE,
DESTINATION VARCHAR(255),
PRIMARY KEY (BOOKING_ID)
)

--BIO TABLE 

CREATE TABLE  BIO  
(
PERSON_ID INT NOT NULL,
FINGERPRINT_ID VARCHAR(255),
IS_MARCH VARCHAR(255),
IS_MARCH VARCHAR(255),
CRIME_ID INT,
PRIMARY KEY (PERSON_ID)
)

--PURCHASE TABLES 
CREATE TABLE PURCHASES 
(PURCHASE_ID VARCHAR(255),
PURCHASE_ITEM VARCHAR(255),
PURCHASE_STORE VARCHAR(255),
PURCHASE_LOCATION VARCHAR(255),
PURCHASE_DATE DATE,
PRIMARY KEY (PURCHASE_ID)
)

-- Get all history of all crimes

SELECT * FROM CRIMES

--ALL SUSPECT CRIMES AS

SELECT a.*, b.* FROM CRIMES a 
LEFT OUTER JOIN PERSONS b 
ON a.PERSON_ID = b.PERSON_ID 


--LATEST CRIMES 

SELECT * FROM CRIMES WHERE CRIME_TIMESTAMP >= '2022-02-22'--LATEST CRIMES 

--LATEST CRIMES 
SELECT * FROM CRIMES WHERE CRIME_TIMESTAMP >= '2022-02-22'
AND CRIME_LOCATION = 'ORLEANS'

--ASSOCITE

SELECT a.*, b.*,c.FINGERPRINT_ID FROM CRIMES a 
LEFT OUTER JOIN PERSONS b 
ON a.PERSON_ID = b.PERSON_ID 
LEFT OUTER JOIN BIO  
ON b.PERSON_ID = c.PERSON_ID